{"version":3,"sources":["Components/TabInfo.tsx","tabs.tsx","Components/TabsPage.tsx","App.tsx","index.tsx"],"names":["TabInfo","tabs","tabId","useParams","tab","find","curTab","id","className","content","title","TabsPage","map","to","isActive","index","element","path","App","ReactDOM","render","document","getElementById"],"mappings":"0NAOaA,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjCC,EAAUC,cAAVD,MAEFE,EAAMH,EAAKI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAOL,KAE9C,OAAIE,EACK,oBAAII,UAAU,QAAd,SAAuBJ,EAAIK,UAG7B,oBAAID,UAAU,QAAd,kCChBIP,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASD,QAAS,eACxC,CAAEF,GAAI,QAASG,MAAO,QAASD,QAAS,eACxC,CAAEF,GAAI,QAASG,MAAO,QAASD,QAAS,gBCM7BE,EAAW,WACtB,OACE,gCACE,oBAAIH,UAAU,0BAAd,uBACA,oBAAIA,UAAU,gCAAd,SACGP,EAAKW,KAAI,SAAAR,GAAG,OACX,6BACE,cAAC,IAAD,CACES,GAAIT,EAAIG,GACRC,UAAW,qBAAGM,SAER,iBACA,IALR,SAQGV,EAAIM,SATAN,EAAIG,SAcjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,QAAS,oBAAIR,UAAU,QAAd,mCACtB,cAAC,IAAD,CAAOS,KAAK,SAASD,QAAS,cAAC,EAAD,CAASf,KAAMA,MAC7C,cAAC,IAAD,CAAOgB,KAAK,WAAWD,QAAS,cAAC,IAAD,CAAUH,GAAG,mBCGtCK,EA1BH,kBACV,sBAAKV,UAAU,MAAf,UACE,yBAAQA,UAAU,eAAlB,UACE,cAAC,IAAD,CAASK,GAAG,IAAIL,UAAU,qBAA1B,kBACA,cAAC,IAAD,CAASK,GAAG,QAAQL,UAAU,qBAA9B,qBAEF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CACES,KAAK,IACLD,QACE,oBAAIR,UAAU,0BAAd,yBAGJ,cAAC,IAAD,CAAOS,KAAK,SAASD,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CACEC,KAAK,IACLD,QACE,oBAAIR,UAAU,0BAAd,0CCvBZW,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c1cda9e.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ninterface Props {\n  tabs: Tab[]\n}\n\nexport const TabInfo: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  const tab = tabs.find(curTab => curTab.id === tabId);\n\n  if (tab) {\n    return <h1 className=\"title\">{tab.content}</h1>;\n  }\n\n  return <h1 className=\"title\">Please select a tab</h1>;\n};\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { TabInfo } from './TabInfo';\nimport { tabs } from '../tabs';\n\nexport const TabsPage = () => {\n  return (\n    <div>\n      <h1 className=\"title has-text-centered\">Tabs page</h1>\n      <ul className=\"tabs is-justify-content-start\">\n        {tabs.map(tab => (\n          <li key={tab.id}>\n            <NavLink\n              to={tab.id}\n              className={({ isActive }) => (\n                isActive\n                  ? 'button is-info'\n                  : ''\n              )}\n            >\n              {tab.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n      <Routes>\n        <Route index element={<h1 className=\"title\">Please select a tab</h1>} />\n        <Route path=\":tabId\" element={<TabInfo tabs={tabs} />} />\n        <Route path=\":tabId/*\" element={<Navigate to=\"/tabs\" />} />\n      </Routes>\n    </div>\n  );\n};\n","import {\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport 'bulma';\nimport { TabsPage } from './Components/TabsPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"is-flex mb-4\">\n      <NavLink to=\"/\" className=\"navbar-item is-tab\">Home</NavLink>\n      <NavLink to=\"/tabs\" className=\"navbar-item is-tab\">Tabs</NavLink>\n    </header>\n    <main>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <h1 className=\"title has-text-centered\">Home page</h1>\n          }\n        />\n        <Route path=\"tabs/*\" element={<TabsPage />} />\n        <Route\n          path=\"*\"\n          element={\n            <h1 className=\"title has-text-centered\">Page is not found</h1>\n          }\n        />\n      </Routes>\n    </main>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}